//
//  LoginViewController.swift
//  BankApp
//
//  Created by Ulisses Gomes on 02/04/20.
//  Copyright (c) 2020 Ulisses Gomes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    func loginSucess(user: Login.UserAccount.ViewModel)
    func loginError(error: Login.UserAccount.Error)
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    
    
    @IBOutlet weak var user: UITextField!
    @IBOutlet weak var password: UITextField!
    
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        user.text = interactor?.fetchUser()
    }
    
    
    
    func loginSucess(user: Login.UserAccount.ViewModel) {
        router?.routeToStatement(segue: nil)
    }
    
    func loginError(error: Login.UserAccount.Error) {
        let alert = UIAlertController(title: "Erro", message: error.message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        self.present(alert, animated: true)
    }
    
    @IBAction func login(_ sender: Any) {
        password.text = ""
        let request = Login.UserAccount.Request(user: user.text!, password: password.text!)
        interactor?.doLogin(request: request)
    }
    
    
}
