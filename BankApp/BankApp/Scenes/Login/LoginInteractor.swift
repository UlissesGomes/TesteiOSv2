//
//  LoginInteractor.swift
//  BankApp
//
//  Created by Ulisses Gomes on 02/04/20.
//  Copyright (c) 2020 Ulisses Gomes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol LoginBusinessLogic
{
    func doLogin(request: Login.UserAccount.Request)
    func fetchUser() -> String?
}

protocol LoginDataStore {
    var response: Login.UserAccount.Response? { get }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    
    var presenter: LoginPresentationLogic?
    private let worker: LoginWorker = LoginWorker()
    var userWorker: UserAccountWorker = UserAccountWorker(store: LoginAPI(), localStore: UserStore())
    
    
    var response: Login.UserAccount.Response?
    
    // MARK: Do login
    
    func doLogin(request: Login.UserAccount.Request) {
        
        let user = request.user
        let password = request.password
        
        if worker.validatePassword(password) {
            userWorker.doLogin(user: user, password: password, completion: { [weak self] response in
                
                if response.error.code != nil {
                    self!.presenter?.loginError(error: Login.UserAccount.Error(message: response.error.message ?? "Usuário ou senha incorretos"))
                    return
                }
                
                let id = response.userAccount.userId ?? -1
                let name = response.userAccount.name ?? ""
                let agency = response.userAccount.agency ?? ""
                let account = response.userAccount.bankAccount ?? ""
                let balance = response.userAccount.balance ?? 0.0
                
                let response = Login.UserAccount.Response(userId: id, name: name, agency: agency, account: account, balance: balance)
                self?.userWorker.storeUsername(user: user)
                self?.response = response
                self?.presenter?.loginSucess(response: response)
                
            })
        } else {
            self.presenter?.loginError(error: Login.UserAccount.Error(message: "Usuário ou senha incorretos"))
            
        }
        
        
    }
    
    func fetchUser() -> String? {
        return userWorker.getUser()
    }
    
}
