//
//  StatementInteractor.swift
//  BankApp
//
//  Created by Ulisses Gomes on 03/04/20.
//  Copyright (c) 2020 Ulisses Gomes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementBusinessLogic {
    func getStatements(request: Statements.StatementList.Request)
    func exitAction()
}

protocol StatementDataStore {
    var userAccount: Statements.UserData? { get set }
}

class StatementInteractor: StatementBusinessLogic, StatementDataStore {
    
    var userAccount: Statements.UserData?
    var presenter: StatementPresentationLogic?
    var worker: StatementWorker?
    
    var userStore = UserStore()
    
    // MARK: Do something
    
    func getStatements(request: Statements.StatementList.Request){
        worker = StatementWorker(store: StatementAPI())
        
        worker?.fetchStatements(userId: request.userId, completionHandler: { response in
            if !response.statementList.isEmpty {
                var model = Statements.StatementList.ViewModel(statements: [])
                let covertMap = response.statementList.map({ (item) -> Statements.StatementList.Response in
                    return Statements.StatementList.Response(title: item.title, desc: item.desc, date: item.date, value: "R$ \(String(format: "%.2f",item.value))")
                })
                model.statements.append(contentsOf: covertMap)
                self.presenter?.presentStatement(response: model)
            }
        })
    }
    
    func exitAction() {
        
    }
}
